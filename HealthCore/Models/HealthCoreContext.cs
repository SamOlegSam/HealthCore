// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace HealthCore.Models
{
    public partial class HealthCoreContext : DbContext
    {
        public HealthCoreContext()
        {
        }

        public HealthCoreContext(DbContextOptions<HealthCoreContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Banks> Banks { get; set; }
        public virtual DbSet<Child> Child { get; set; }
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Dogovor> Dogovor { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Fillial> Fillial { get; set; }
        public virtual DbSet<Koef> Koef { get; set; }
        public virtual DbSet<Komissiya> Komissiya { get; set; }
        public virtual DbSet<Naznach> Naznach { get; set; }
        public virtual DbSet<Position> Position { get; set; }
        public virtual DbSet<Protocol> Protocol { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Sanatorium> Sanatorium { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<SummDogZay> SummDogZay { get; set; }
        public virtual DbSet<TableZay> TableZay { get; set; }
        public virtual DbSet<TypeDog> TypeDog { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserRole> UserRole { get; set; }
        public virtual DbSet<Zayavlenie> Zayavlenie { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Banks>(entity =>
            {
                entity.Property(e => e.Address).HasMaxLength(250);

                entity.Property(e => e.Bic)
                    .HasMaxLength(100)
                    .HasColumnName("BIC");

                entity.Property(e => e.DateModif).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(150);

                entity.Property(e => e.Okpo)
                    .HasMaxLength(100)
                    .HasColumnName("OKPO");

                entity.Property(e => e.Primech).HasMaxLength(150);

                entity.Property(e => e.Rs)
                    .HasMaxLength(100)
                    .HasColumnName("RS");

                entity.Property(e => e.Unp)
                    .HasMaxLength(100)
                    .HasColumnName("UNP");

                entity.Property(e => e.UserModif).HasMaxLength(50);

                entity.HasOne(d => d.City)
                    .WithMany(p => p.Banks)
                    .HasForeignKey(d => d.CityId)
                    .HasConstraintName("FK_Banks_City");
            });

            modelBuilder.Entity<Child>(entity =>
            {
                entity.Property(e => e.DateBirth).HasColumnType("datetime");

                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.Fio)
                    .HasMaxLength(50)
                    .HasColumnName("FIO");

                entity.Property(e => e.Pol).HasMaxLength(50);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.UserMod).HasMaxLength(50);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.Child)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_Child_Employee");

                entity.HasOne(d => d.Status)
                    .WithMany(p => p.Child)
                    .HasForeignKey(d => d.StatusId)
                    .HasConstraintName("FK_Child_Status");
            });

            modelBuilder.Entity<City>(entity =>
            {
                entity.Property(e => e.CountryId).HasColumnName("CountryID");

                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.Priznak).HasMaxLength(255);

                entity.Property(e => e.UserMod).HasMaxLength(50);

                entity.HasOne(d => d.Country)
                    .WithMany(p => p.City)
                    .HasForeignKey(d => d.CountryId)
                    .HasConstraintName("FK_City_Country");
            });

            modelBuilder.Entity<Country>(entity =>
            {
                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.Priznak).HasMaxLength(255);

                entity.Property(e => e.UserMod).HasMaxLength(50);
            });

            modelBuilder.Entity<Department>(entity =>
            {
                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(200);

                entity.Property(e => e.Priznak).HasMaxLength(50);

                entity.Property(e => e.UserMod).HasMaxLength(50);
            });

            modelBuilder.Entity<Dogovor>(entity =>
            {
                entity.Property(e => e.DateDog).HasColumnType("datetime");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.DateModif).HasColumnType("datetime");

                entity.Property(e => e.DateStart).HasColumnType("datetime");

                entity.Property(e => e.FillialId).HasColumnName("FillialID");

                entity.Property(e => e.Number).HasMaxLength(50);

                entity.Property(e => e.Primech).HasMaxLength(50);

                entity.Property(e => e.PriznakClose).HasMaxLength(50);

                entity.Property(e => e.SanatoriumId).HasColumnName("SanatoriumID");

                entity.Property(e => e.SummaDog).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UserModif).HasMaxLength(50);

                entity.HasOne(d => d.Sanatorium)
                    .WithMany(p => p.Dogovor)
                    .HasForeignKey(d => d.SanatoriumId)
                    .HasConstraintName("FK_Dogovor_Sanatorium");

                entity.HasOne(d => d.TypeDog)
                    .WithMany(p => p.Dogovor)
                    .HasForeignKey(d => d.TypeDogId)
                    .HasConstraintName("FK_Dogovor_TypeDog");
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.Property(e => e.Address).HasMaxLength(50);

                entity.Property(e => e.DateBirth).HasColumnType("datetime");

                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.FilialId).HasColumnName("FilialID");

                entity.Property(e => e.Fiodp)
                    .HasMaxLength(50)
                    .HasColumnName("FIODP");

                entity.Property(e => e.Fiopp)
                    .HasMaxLength(50)
                    .HasColumnName("FIOPP");

                entity.Property(e => e.Fiorp)
                    .HasMaxLength(50)
                    .HasColumnName("FIORP");

                entity.Property(e => e.Fiotp)
                    .HasMaxLength(50)
                    .HasColumnName("FIOTP");

                entity.Property(e => e.Fiovp)
                    .HasMaxLength(50)
                    .HasColumnName("FIOVP");

                entity.Property(e => e.FirstName).HasMaxLength(50);

                entity.Property(e => e.LastName).HasMaxLength(50);

                entity.Property(e => e.MiddleName).HasMaxLength(50);

                entity.Property(e => e.Pol).HasMaxLength(50);

                entity.Property(e => e.PositionId).HasColumnName("PositionID");

                entity.Property(e => e.UserMod).HasMaxLength(50);

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.Employee)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK_Employee_Department");

                entity.HasOne(d => d.Filial)
                    .WithMany(p => p.Employee)
                    .HasForeignKey(d => d.FilialId)
                    .HasConstraintName("FK_Employee_Fillial");

                entity.HasOne(d => d.Position)
                    .WithMany(p => p.Employee)
                    .HasForeignKey(d => d.PositionId)
                    .HasConstraintName("FK_Employee_Position");
            });

            modelBuilder.Entity<Fillial>(entity =>
            {
                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.Prefix).HasMaxLength(255);

                entity.Property(e => e.Priznak).HasMaxLength(255);

                entity.Property(e => e.UserMod).HasMaxLength(50);
            });

            modelBuilder.Entity<Koef>(entity =>
            {
                entity.Property(e => e.Control).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DateModif).HasColumnType("datetime");

                entity.Property(e => e.DateStart).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(150);

                entity.Property(e => e.Preduptejdenie).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Primech).HasMaxLength(200);

                entity.Property(e => e.UserModif).HasMaxLength(50);

                entity.Property(e => e.Value).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Komissiya>(entity =>
            {
                entity.Property(e => e.DateModific).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.FiodatPad)
                    .HasMaxLength(50)
                    .HasColumnName("FIODatPad");

                entity.Property(e => e.Priznak).HasMaxLength(50);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.UserModific).HasMaxLength(50);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.Komissiya)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_Komissiya_Employee");

                entity.HasOne(d => d.Status)
                    .WithMany(p => p.Komissiya)
                    .HasForeignKey(d => d.StatusId)
                    .HasConstraintName("FK_Komissiya_Naznach");
            });

            modelBuilder.Entity<Naznach>(entity =>
            {
                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.Priznak).HasMaxLength(50);

                entity.Property(e => e.UserMod).HasMaxLength(50);
            });

            modelBuilder.Entity<Position>(entity =>
            {
                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(2000);

                entity.Property(e => e.Priznak).HasMaxLength(50);

                entity.Property(e => e.UserMod).HasMaxLength(50);
            });

            modelBuilder.Entity<Protocol>(entity =>
            {
                entity.Property(e => e.DateModific).HasColumnType("datetime");

                entity.Property(e => e.DateProt).HasColumnType("datetime");

                entity.Property(e => e.FilialId).HasColumnName("FilialID");

                entity.Property(e => e.Priznak).HasMaxLength(50);

                entity.Property(e => e.UserModific).HasMaxLength(50);

                entity.HasOne(d => d.Filial)
                    .WithMany(p => p.Protocol)
                    .HasForeignKey(d => d.FilialId)
                    .HasConstraintName("FK_Protocol_Fillial");
            });

            modelBuilder.Entity<Roles>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Priznak).HasMaxLength(50);

                entity.Property(e => e.Role).HasMaxLength(50);
            });

            modelBuilder.Entity<Sanatorium>(entity =>
            {
                entity.Property(e => e.Address).HasMaxLength(200);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.PostAddress).HasMaxLength(200);

                entity.Property(e => e.Priznak).HasMaxLength(255);

                entity.Property(e => e.SanatInd).HasMaxLength(50);

                entity.Property(e => e.Unp)
                    .HasMaxLength(50)
                    .HasColumnName("UNP");

                entity.Property(e => e.UserMod).HasMaxLength(50);

                entity.HasOne(d => d.Bank)
                    .WithMany(p => p.Sanatorium)
                    .HasForeignKey(d => d.BankId)
                    .HasConstraintName("FK_Sanatorium_Banks");

                entity.HasOne(d => d.City)
                    .WithMany(p => p.Sanatorium)
                    .HasForeignKey(d => d.CityId)
                    .HasConstraintName("FK_Sanatorium_City");
            });

            modelBuilder.Entity<Status>(entity =>
            {
                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.Priznak).HasMaxLength(255);

                entity.Property(e => e.UserMod).HasMaxLength(50);
            });

            modelBuilder.Entity<SummDogZay>(entity =>
            {
                entity.Property(e => e.Primech).HasMaxLength(200);

                entity.Property(e => e.Summa).HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.Dogovor)
                    .WithMany(p => p.SummDogZay)
                    .HasForeignKey(d => d.DogovorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SummDogZay_Dogovor");

                entity.HasOne(d => d.Zayavlenie)
                    .WithMany(p => p.SummDogZay)
                    .HasForeignKey(d => d.ZayavlenieId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SummDogZay_Zayavlenie");
            });

            modelBuilder.Entity<TableZay>(entity =>
            {
                entity.Property(e => e.ChildId).HasColumnName("ChildID");

                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.Priznak).HasMaxLength(255);

                entity.Property(e => e.UserMod).HasMaxLength(50);

                entity.Property(e => e.ZayId).HasColumnName("ZayID");

                entity.HasOne(d => d.Child)
                    .WithMany(p => p.TableZay)
                    .HasForeignKey(d => d.ChildId)
                    .HasConstraintName("FK_TableZay_Child");

                entity.HasOne(d => d.Zay)
                    .WithMany(p => p.TableZay)
                    .HasForeignKey(d => d.ZayId)
                    .HasConstraintName("FK_TableZay_Zayavlenie");
            });

            modelBuilder.Entity<TypeDog>(entity =>
            {
                entity.Property(e => e.DateModif).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(200);

                entity.Property(e => e.Primech).HasMaxLength(200);

                entity.Property(e => e.UserModif).HasMaxLength(50);
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.Password).HasMaxLength(50);

                entity.Property(e => e.UserModif).HasMaxLength(50);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.User)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_User_Employee");
            });

            modelBuilder.Entity<UserRole>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateModif).HasColumnType("datetime");

                entity.Property(e => e.Priznak).HasMaxLength(50);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserModif).HasMaxLength(50);

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.UserRole)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FK_UserRole_Roles");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserRole)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_UserRole_User");
            });

            modelBuilder.Entity<Zayavlenie>(entity =>
            {
                entity.Property(e => e.DateDog).HasColumnType("datetime");

                entity.Property(e => e.DateMod).HasColumnType("datetime");

                entity.Property(e => e.DateZ).HasColumnType("datetime");

                entity.Property(e => e.DogovorId).HasColumnName("DogovorID");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.NumberDog).HasMaxLength(50);

                entity.Property(e => e.Po).HasColumnType("datetime");

                entity.Property(e => e.Priznak).HasMaxLength(255);

                entity.Property(e => e.ProtocolId).HasColumnName("ProtocolID");

                entity.Property(e => e.S).HasColumnType("datetime");

                entity.Property(e => e.SanatoriumId).HasColumnName("SanatoriumID");

                entity.Property(e => e.Summa).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SummaDop).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TurOpeId).HasColumnName("TurOpeID");

                entity.Property(e => e.UserMod).HasMaxLength(50);

                entity.Property(e => e.Who).HasMaxLength(255);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.Zayavlenie)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_Zayavlenie_Employee");

                entity.HasOne(d => d.Protocol)
                    .WithMany(p => p.Zayavlenie)
                    .HasForeignKey(d => d.ProtocolId)
                    .HasConstraintName("FK_Zayavlenie_Protocol");

                entity.HasOne(d => d.Sanatorium)
                    .WithMany(p => p.ZayavlenieSanatorium)
                    .HasForeignKey(d => d.SanatoriumId)
                    .HasConstraintName("FK_Zayavlenie_Sanatorium");

                entity.HasOne(d => d.TurOpe)
                    .WithMany(p => p.ZayavlenieTurOpe)
                    .HasForeignKey(d => d.TurOpeId)
                    .HasConstraintName("FK_Zayavlenie_Sanatorium1");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}